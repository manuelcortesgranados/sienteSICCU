<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition
    xmlns:rich="http://richfaces.org/rich"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:a4j="http://richfaces.org/a4j" 
    xmlns:interkont="http://www.interkont.com/jsf"
    >

    <h:form styleClass="ikont-hp-footer">
        <h:panelGroup layout="block" styleClass="ikont-hpg-content-footer">
            <h:panelGrid columns="1" styleClass="panelcenter" columnClasses="panelcenter,panelcenter,panelcenter,panelcenter,panelcenter,panelcenter">
                <h:panelGroup layout="block" styleClass="panelcenter ikont-hpg-conectatezoom" >
                    <h:outputText value="Conectate con #{var.nombreclientesistema}" styleClass="ikont-hot-conectate-zoom"></h:outputText>
                </h:panelGroup>
                <h:panelGrid columns="2" styleClass="panelcenter">
                    <h:commandLink styleClass="ikont-hcl-footer-fc"/>
                    <h:commandLink styleClass="ikont-hcl-footer-tw"/>
                </h:panelGrid>
                <h:panelGroup layout="block" styleClass="panelcenter " >
                    <h:outputText value="#{var.footertextozoomlineauno}" styleClass="ikont-hot-text-footer"></h:outputText><br/>
                    <h:outputText value="#{var.footertextozoomlineados}" styleClass="ikont-hot-text-footer"></h:outputText>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:outputText value="*" styleClass="ikont-hot-terminos-condiciones2 ikont-hot-terminos-condiciones"></h:outputText>
                    <h:outputText value="#{var.loginfoterterminos}" styleClass="ikont-hot-terminos-condiciones"></h:outputText>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:commandLink styleClass="ikont-hcl-footer-sellos sello-fonade"/>
                    <h:commandLink styleClass="ikont-hcl-footer-sellos sello-republica"/>
                    <h:commandLink styleClass="ikont-hcl-footer-sellos sello-zoom"/>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:outputText value="#{var.nombreclientesistema}" styleClass="ikont-hot-derechos-reser"></h:outputText>
                    <b><h:outputText value=" 2013 " styleClass="ikont-hot-derechos-reser"></h:outputText></b>
                    <h:outputText value=" Todos los derechos reservados" styleClass="ikont-hot-derechos-reser"></h:outputText>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:outputText value="Powered by" styleClass="ikont-div-headercontent-participacion"></h:outputText>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:commandLink styleClass="ikont-hcl-footer-firma"/>
                </h:panelGroup>
            </h:panelGrid>
        </h:panelGroup>
    </h:form>
    <script type="text/javascript">

        function formatMoney(_element) {
            var _value = _element.value;
            var _int = /^(?:\+|-)?\d+$/;
            var _reg = new RegExp(_int);
            var _valuetotal = _value.replace(/./g, "");
           // _valuetotal = _valuetotal.replace(/$/gi, "");
            //_valuetotal = _valuetotal.replace(/,/gi, "");
            if (_value) {
                console.log(_valuetotal);
                console.log(_element.getAttribute("money"));
                if (_valuetotal != _element.getAttribute("money")) {
                    var _caracter = _value.substring((_value.length) - 1);
                    if (_caracter.match(_reg)) {
                        var _num = (_element.getAttribute("money")) ? _element.getAttribute("money") : "";
                        _element.setAttribute("money", _num + "" + _caracter);
                        var _money = formatNumber(parseInt(_element.getAttribute("money")), "$");
                        _element.value = _money;
                    } else {
                        _element.value = _value.substring(0, (_value.length) - 1)
                    }
                }
            } else {
                _element.setAttribute("money", "0");
            }
        }

        function formatNumber(num, prefix)
        {
            num = Math.round(parseFloat(num) * Math.pow(10, 2)) / Math.pow(10, 2)
            prefix = prefix || '';
            num += '';
            var splitStr = num.split('.');
            var splitLeft = splitStr[0];
            var splitRight = splitStr.length > 1 ? '.' + splitStr[1] : '.00';
            splitRight = splitRight + '00';
            splitRight = splitRight.substr(0, 3);
            var regx = /(\d+)(\d{3})/;
            while (regx.test(splitLeft)) {
                splitLeft = splitLeft.replace(regx, '$1' + ',' + '$2');
            }
            return prefix + splitLeft + splitRight;
        }
    </script>
</ui:composition>
