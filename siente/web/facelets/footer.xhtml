<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition
    xmlns:rich="http://richfaces.org/rich"
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:h="http://java.sun.com/jsf/html"
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:a4j="http://richfaces.org/a4j" 
    xmlns:interkont="http://www.interkont.com/jsf"
    >

    <h:form styleClass="ikont-hp-footer" prependId="false">
        <h:panelGroup layout="block" styleClass="ikont-hpg-content-footer">
            <h:panelGrid columns="1" styleClass="panelcenter" columnClasses="panelcenter,panelcenter,panelcenter,panelcenter,panelcenter,panelcenter">
                <h:panelGroup layout="block" styleClass="panelcenter ikont-hpg-conectatezoom" >
                    <h:outputText value="Conectate con #{var.nombreclientesistema}" styleClass="ikont-hot-conectate-zoom"></h:outputText>
                </h:panelGroup>
                <h:panelGrid columns="2" styleClass="panelcenter">
                    <h:commandLink styleClass="ikont-hcl-footer-fc"/>
                    <h:commandLink styleClass="ikont-hcl-footer-tw"/>
                </h:panelGrid>
                <h:panelGroup layout="block" styleClass="panelcenter " >
                    <h:outputText value="#{var.footertextozoomlineauno}" styleClass="ikont-hot-text-footer"></h:outputText><br/>
                    <h:outputText value="#{var.footertextozoomlineados}" styleClass="ikont-hot-text-footer"></h:outputText>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:outputText value="*" styleClass="ikont-hot-terminos-condiciones2 ikont-hot-terminos-condiciones"></h:outputText>
                    <h:outputText value="#{var.loginfoterterminos}" styleClass="ikont-hot-terminos-condiciones"></h:outputText>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:outputText value="*" styleClass="ikont-hot-terminos-condiciones2 ikont-hot-terminos-condiciones"></h:outputText>
                    <h:outputText value="Versión #{var.version}" styleClass="ikont-hot-terminos-condiciones"></h:outputText>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:commandLink styleClass="ikont-hcl-footer-sellos sello-fonade"/>
                    <h:commandLink styleClass="ikont-hcl-footer-sellos sello-republica"/>
                    <h:commandLink styleClass="ikont-hcl-footer-sellos sello-zoom"/>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:outputText value="#{var.nombreclientesistema}" styleClass="ikont-hot-derechos-reser"></h:outputText>
                    <b><h:outputText value=" 2013 " styleClass="ikont-hot-derechos-reser"></h:outputText></b>
                    <h:outputText value=" Todos los derechos reservados" styleClass="ikont-hot-derechos-reser"></h:outputText>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:outputText value="Powered by" styleClass="ikont-div-headercontent-participacion"></h:outputText>
                </h:panelGroup>
                <h:panelGroup layout="block" styleClass="panelcenter">
                    <h:commandLink styleClass="ikont-hcl-footer-firma"/>
                </h:panelGroup>
            </h:panelGrid>
        </h:panelGroup>
        <a4j:jsFunction name="closeaplication" render="body"  execute="@this" immediate="true" oncomplete="location.reload(true);" rendered="#{SessionBeanCobra.logueadodesdemapa}">
            <a4j:actionListener listener="#{SessionBeanCobra.cerrarSession_action}"/>

        </a4j:jsFunction>
    </h:form>
    <ui:include src="/modal/sessionclose.xhtml"/>
    <script src="/#{var.versioncobra}/resources/reloj/js/jquery.js" type="text/javascript"></script>
    <script type="text/javascript" >

        function formatNumber(_element) {
            var _value = _element.value;
            var _int = /^(\d{1}\.)?(\d+\.?)+(,\d{2})?$/;
            var _reg = new RegExp(_int);
            if (_value) {
                if (_value.match(_reg)) {
                    var _money = formatMoney(_value, "$");
                    _element.value = _money;
                }
            }
        }

        function returnNumber(_element) {
            var _value = _element.value;
            var _int = /^(?:\+|-)?\d+$/;
            var _reg = new RegExp(_int);
            var _decimal = _value.substring((_value.length) - 2);
            _value = (parseInt(_decimal)) ? _value : _value.substring(0, (_value.length) - 2);
            if (_value) {
                var _valuetotal = _value.replace(/\./g, "");
                _valuetotal = _valuetotal.replace('$', "");
                _valuetotal = _valuetotal.replace(/\,/g, "");
                if (_valuetotal.match(_reg)) {
                    _element.value = _valuetotal;
                }
            }
        }

        function formatMoney(num, prefix)
        {
            num = Math.round(parseFloat(num) * Math.pow(10, 2)) / Math.pow(10, 2)
            prefix = prefix || '';
            num += '';
            var splitStr = num.split('.');
            var splitLeft = splitStr[0];
            var splitRight = splitStr.length > 1 ? '.' + splitStr[1] : '.00';
            splitRight = splitRight + '00';
            splitRight = splitRight.substr(0, 3);
            var regx = /(\d+)(\d{3})/;
            while (regx.test(splitLeft)) {
                splitLeft = splitLeft.replace(regx, '$1' + ',' + '$2');
            }
            return prefix + splitLeft + splitRight;
        }

        var $jq = jQuery.noConflict();
        $jq(document).ready(function() {
            statesessionaplication();
            setInterval(function() {
                statesessionaplication();
            }, 60000);
        });

        function statesessionaplication() {
            if (localStorage.getItem('closeaplicaction') == 'true') {
                localStorage.setItem('closeaplicaction', new Date().getTime());
            }
            var _after = (parseInt(localStorage.getItem('closeaplicaction'))) ? parseInt(localStorage.getItem('closeaplicaction')) : new Date().getTime();
            var _time = parseInt(new Date().getTime()) - _after;
            if (parseInt(_time) > 7200000) {
                localStorage.setItem('closeaplicaction', 'true');
                closeaplication();
            } else {
                localStorage.setItem('closeaplicaction', new Date().getTime());
            }
        }

        /**
         * Limpia el valor asignado elemento que ingresa como parámetro
         * @param {type} target elemento que permite ingresar valor
         * @returns {undefined}
         */
        function clearText(target) {
            target.value = "";
        }

    </script>
</ui:composition>
